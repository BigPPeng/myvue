{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      queryForm: {\n        userType: null\n      },\n      tableData: [],\n      dialogVisible: false,\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        identity: \"\",\n        // 初始值可以是'farmer'、'supplier'或'buyer'中的任何一个，或者为空字符串\n        phone: \"\",\n        address: \"\"\n      }\n    };\n  },\n  methods: {\n    async getList() {\n      let types = [];\n      if (this.queryForm.userType === null) {\n        types = [];\n      } else {\n        types = [this.queryForm.userType];\n      }\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/user/getAllUserByType\", {\n        list: types\n      });\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    reset() {\n      this.queryForm.userType = null, this.getList();\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["created","getList","data","queryForm","userType","tableData","dialogVisible","registerForm","username","password","identity","phone","address","methods","types","aa","$http","post","list","console","log","reset","submitForm","formName","$refs","validate","valid","alert"],"sources":["src/components/pages4/ConsultList.vue"],"sourcesContent":["<template>\n    <div>\n      <h3 style=\"margin-top: 0\">咨询列表</h3>\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>咨询列表</el-breadcrumb-item>\n      </el-breadcrumb>\n      <el-card>\n    \n  \n        <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n          <el-table-column label=\"ID\" prop=\"id\" />\n          <el-table-column label=\"咨询标题\" prop=\"consultationTitle\" />\n          <el-table-column label=\"咨询内容\" prop=\"consultationContent\" />\n          <el-table-column label=\"咨询时间\" prop=\"consultationTime\" />\n          <el-table-column label=\"操作\">\n            <template >\n              <!-- 咨询 -->\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-edit\"\n                size=\"mini\"\n                @click=\"dialogVisible = true\"\n              >回复</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n <!-- 对话框 -->\n <el-dialog\n        title=\"回复\"\n        :visible.sync=\"dialogVisible\"\n        width=\"50%\"\n        @close=\"dialogVisible = false\"\n      >\n        <el-form :model=\"registerForm\" ref=\"registerForm\" label-width=\"120px\">\n  \n          <el-form-item label=\"回复内容\">\n            <el-input\n              type=\"textarea\"\n              :rows=\"2\"\n              placeholder=\"请输入回复内容\"\n              v-model=\"textarea\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm('registerForm')\"\n              >回复</el-button\n            >\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-dialog>\n\n\n        <div>\n          <el-pagination></el-pagination>\n        </div>\n      </el-card>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    created() {\n      this.getList();\n    },\n    data() {\n      return {\n        queryForm:{\n          userType:null\n        },\n        tableData: [],\n        dialogVisible: false,\n       registerForm: {\n        username: \"\",\n        password: \"\",\n        identity: \"\", // 初始值可以是'farmer'、'supplier'或'buyer'中的任何一个，或者为空字符串\n        phone: \"\",\n        address: \"\",\n      },\n      };\n    },\n    methods: {\n      async getList() {\n        let types = []; \n        if (this.queryForm.userType === null) {\n          types = []; \n        } else {\n          types = [this.queryForm.userType]\n        }\n        const { data: aa } = await this.$http.post(\"/api/user/getAllUserByType\", {list: types});\n        console.log(aa)\n        this.tableData = aa.data;\n      },\n      reset() {\n        this.queryForm.userType = null,\n        this.getList();\n      },\n      submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    }\n  \n  };\n  </script>\n  \n  <style lang=\"less\" scoped>\n  .el-breadcrumb {\n    margin-bottom: 15px;\n    font-size: 17px;\n  }\n  </style>"],"mappings":"AA8DA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;MACA;MACAC,SAAA;MACAC,aAAA;MACAC,YAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAZ,QAAA;MACA,IAAAa,KAAA;MACA,SAAAX,SAAA,CAAAC,QAAA;QACAU,KAAA;MACA;QACAA,KAAA,SAAAX,SAAA,CAAAC,QAAA;MACA;MACA;QAAAF,IAAA,EAAAa;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAC,IAAA,EAAAJ;MAAA;MACAK,OAAA,CAAAC,GAAA,CAAAL,EAAA;MACA,KAAAV,SAAA,GAAAU,EAAA,CAAAb,IAAA;IACA;IACAmB,MAAA;MACA,KAAAlB,SAAA,CAAAC,QAAA,SACA,KAAAH,OAAA;IACA;IACAqB,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAR,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}