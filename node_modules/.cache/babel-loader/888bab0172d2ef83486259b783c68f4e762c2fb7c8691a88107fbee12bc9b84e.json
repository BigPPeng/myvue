{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      //搜索获取列表信息\n      async getList() {\n        let user = window.sessionStorage.getItem('user');\n        let userObj = JSON.parse(user);\n        const {\n          data: aa\n        } = await this.$http.post(\"/api/product/getAllRentProductByPublishId\", {\n          id: userObj.id\n        });\n        console.log(aa);\n        this.tableData = aa.data;\n      },\n      tableData: []\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    }\n  },\n  //删除\n  async deleteUser(row) {\n    console.log(row);\n    const userName = row.username;\n    const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).catch(err => err);\n    // 成功删除为confirm 取消为 cancel\n    if (confirmResult != 'confirm') {\n      this.$refs.multipleTable.clearSelection();\n      return this.$message.info(\"已取消删除\");\n    }\n    const {\n      data: bb\n    } = await this.$http.post(\"/api/user/deleteUser\", {\n      id: row.id\n    });\n    this.$message.success(bb);\n    this.getList();\n  }\n};","map":{"version":3,"names":["created","getList","data","user","window","sessionStorage","getItem","userObj","JSON","parse","aa","$http","post","id","console","log","tableData","methods","submitForm","formName","$refs","validate","valid","alert","deleteUser","row","userName","username","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","multipleTable","clearSelection","$message","info","bb","success"],"sources":["src/components/pages/rent/RentNews.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 style=\"margin-top: 0\">发布租用信息</h3>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>农具租用</el-breadcrumb-item>\n      <el-breadcrumb-item>发布租用信息</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"25\">\n\n        <el-col :span=\"5\">\n          <el-button type=\"primary\" @click=\"gotoPublish()\">发布租用信息</el-button>\n        </el-col>\n\n      </el-row>\n\n      <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n        <el-table-column label=\"类型\" prop=\"productType\" />\n        <el-table-column label=\"出租价格\" prop=\"price\" />\n        <el-table-column label=\"数量\" prop=\"quantity\" />\n        <el-table-column label=\"卖家ID\" prop=\"sellerUserId\" />\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <!-- 修改 -->\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row)\">修改</el-button>\n            <!-- 删除 -->\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div>\n        <el-pagination></el-pagination>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      //搜索获取列表信息\n      async getList() {\n        let user = window.sessionStorage.getItem('user');\n        let userObj = JSON.parse(user);\n        const { data: aa } = await this.$http.post(\"/api/product/getAllRentProductByPublishId\", { id: userObj.id });\n        console.log(aa)\n        this.tableData = aa.data;\n      },\n      tableData: [],\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n  },\n\n  //删除\n  async deleteUser(row) {\n    console.log(row)\n    const userName = row.username;\n    const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).catch(err => err)\n    // 成功删除为confirm 取消为 cancel\n    if (confirmResult != 'confirm') {\n      this.$refs.multipleTable.clearSelection();\n      return this.$message.info(\"已取消删除\");\n    }\n    const { data: bb } = await this.$http.post(\"/api/user/deleteUser\", { id: row.id });\n    this.$message.success(bb);\n    this.getList();\n  },\n\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-breadcrumb {\n  margin-bottom: 15px;\n  font-size: 17px;\n}\n</style>"],"mappings":"AAwCA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACA;MACA,MAAAD,QAAA;QACA,IAAAE,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;QACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;QACA;UAAAD,IAAA,EAAAQ;QAAA,eAAAC,KAAA,CAAAC,IAAA;UAAAC,EAAA,EAAAN,OAAA,CAAAM;QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAL,EAAA;QACA,KAAAM,SAAA,GAAAN,EAAA,CAAAR,IAAA;MACA;MACAc,SAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAT,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;EAEA;EACA,MAAAS,WAAAC,GAAA;IACAX,OAAA,CAAAC,GAAA,CAAAU,GAAA;IACA,MAAAC,QAAA,GAAAD,GAAA,CAAAE,QAAA;IACA,MAAAC,aAAA,cAAAC,QAAA,gBAAAH,QAAA;MACAI,iBAAA;MACAC,gBAAA;MACAC,IAAA;IACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;IACA;IACA,IAAAN,aAAA;MACA,KAAAR,KAAA,CAAAe,aAAA,CAAAC,cAAA;MACA,YAAAC,QAAA,CAAAC,IAAA;IACA;IACA;MAAApC,IAAA,EAAAqC;IAAA,eAAA5B,KAAA,CAAAC,IAAA;MAAAC,EAAA,EAAAY,GAAA,CAAAZ;IAAA;IACA,KAAAwB,QAAA,CAAAG,OAAA,CAAAD,EAAA;IACA,KAAAtC,OAAA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}