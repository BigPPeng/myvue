{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      queryForm: {\n        userType: null\n      },\n      tableData: []\n    };\n  },\n  methods: {\n    async getList() {\n      let types = [];\n      if (this.queryForm.userType === null) {\n        types = [];\n      } else {\n        types = [this.queryForm.userType];\n      }\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/user/getAllUserByType\", {\n        list: types\n      });\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    async deleteUser(row) {\n      console.log(row);\n      const userName = row.username;\n      const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: bb\n      } = await this.$http.post(\"/api/user/deleteUser\", {\n        id: row.id\n      });\n      this.$message.success(bb);\n      this.getList();\n    },\n    reset() {\n      this.queryForm.userType = null, this.getList();\n    }\n  }\n};","map":{"version":3,"names":["created","getList","data","queryForm","userType","tableData","methods","types","aa","$http","post","list","console","log","deleteUser","row","userName","username","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","$refs","multipleTable","clearSelection","$message","info","bb","id","success","reset"],"sources":["src/components/pages2/OrderList.vue"],"sourcesContent":["<template>\n    <div>\n      <h3 style=\"margin-top: 0\">订单列表</h3>\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>订单列表</el-breadcrumb-item>\n      </el-breadcrumb>\n      <el-card>\n        <el-row :gutter=\"25\">\n          <el-form ref=\"queryForm\" :model=\"queryForm\" label-width=\"80px\" :inline=\"true\">\n            <el-form-item label=\"商品名称\" prop=\"productName\">\n              <el-input v-model=\"queryForm.productName\" ></el-input>\n            </el-form-item>\n  \n            <!-- 搜索框 -->\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"getList()\">搜索</el-button>\n              <el-button type=\"primary\" @click=\"reset()\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-row>\n  \n        <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n          <el-table-column label=\"id\" prop=\"id\" />  \n        <el-table-column label=\"商品ID\" prop=\"productId\" v-if=\"false\"/>\n        <el-table-column label=\"数量\" prop=\"quantity\" />\n        <el-table-column label=\"价格\" prop=\"price\" />\n        <el-table-column label=\"卖家ID\" prop=\"sellerUserId\" v-if=\"false\"/>\n        <el-table-column label=\"买家ID\" prop=\"buyerUserId\" v-if=\"false\"/>\n        <el-table-column label=\"购买时间\" prop=\"purchaseTime\" />\n          <el-table-column label=\"操作\">\n            <template slot-scope=\"scope\">\n              <!-- 修改 -->\n              <!-- <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row)\">修改</el-button> -->\n              <!-- 删除 -->\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteUser(scope.row)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <div>\n          <el-pagination></el-pagination>\n        </div>\n      </el-card>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    created() {\n      this.getList();\n    },\n    data() {\n      return {\n        queryForm:{\n          userType:null\n        },\n        tableData: [],\n      };\n    },\n    methods: {\n      async getList() {\n        let types = []; \n        if (this.queryForm.userType === null) {\n          types = []; \n        } else {\n          types = [this.queryForm.userType]\n        }\n        const { data: aa } = await this.$http.post(\"/api/user/getAllUserByType\", {list: types});\n        console.log(aa)\n        this.tableData = aa.data;\n      },\n      async deleteUser(row) {\n        console.log(row)\n        const userName = row.username;\n        const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).catch(err => err)\n        // 成功删除为confirm 取消为 cancel\n        if (confirmResult != 'confirm') {\n          this.$refs.multipleTable.clearSelection();\n          return this.$message.info(\"已取消删除\");\n        }\n        const { data: bb } = await this.$http.post(\"/api/user/deleteUser\", { id: row.id });\n        this.$message.success(bb);\n        this.getList();\n      },\n      reset() {\n        this.queryForm.userType = null,\n        this.getList();\n      }\n    }\n  \n  };\n  </script>\n  \n  <style lang=\"less\" scoped>\n  .el-breadcrumb {\n    margin-bottom: 15px;\n    font-size: 17px;\n  }\n  </style>"],"mappings":"AA+CA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAL,QAAA;MACA,IAAAM,KAAA;MACA,SAAAJ,SAAA,CAAAC,QAAA;QACAG,KAAA;MACA;QACAA,KAAA,SAAAJ,SAAA,CAAAC,QAAA;MACA;MACA;QAAAF,IAAA,EAAAM;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAC,IAAA,EAAAJ;MAAA;MACAK,OAAA,CAAAC,GAAA,CAAAL,EAAA;MACA,KAAAH,SAAA,GAAAG,EAAA,CAAAN,IAAA;IACA;IACA,MAAAY,WAAAC,GAAA;MACAH,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA,MAAAC,QAAA,GAAAD,GAAA,CAAAE,QAAA;MACA,MAAAC,aAAA,cAAAC,QAAA,gBAAAH,QAAA;QACAI,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA;MACA,IAAAN,aAAA;QACA,KAAAO,KAAA,CAAAC,aAAA,CAAAC,cAAA;QACA,YAAAC,QAAA,CAAAC,IAAA;MACA;MACA;QAAA3B,IAAA,EAAA4B;MAAA,eAAArB,KAAA,CAAAC,IAAA;QAAAqB,EAAA,EAAAhB,GAAA,CAAAgB;MAAA;MACA,KAAAH,QAAA,CAAAI,OAAA,CAAAF,EAAA;MACA,KAAA7B,OAAA;IACA;IACAgC,MAAA;MACA,KAAA9B,SAAA,CAAAC,QAAA,SACA,KAAAH,OAAA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}