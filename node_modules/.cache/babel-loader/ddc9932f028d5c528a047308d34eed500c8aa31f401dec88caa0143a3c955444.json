{"ast":null,"code":"export default {\n  data() {\n    return {\n      tableData: [{\n        name: \"小麦\",\n        date: \"2024-4-15\",\n        number: \"300\",\n        price: \"1.4\",\n        acquirer: \"收购小麦\"\n      }, {\n        name: \"大豆\",\n        date: \"2024-4-15\",\n        number: \"300\",\n        price: \"1.4\",\n        acquirer: \"收购大豆\"\n      }]\n    };\n  },\n  methods: {\n    //搜索获取列表信息\n    async getList() {\n      let types = [];\n      if (this.queryForm.userType === null) {\n        types = [];\n      } else {\n        types = [this.queryForm.userType];\n      }\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/user/getAllUserByType\", {\n        list: types\n      });\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteUser(row) {\n      console.log(row);\n      const userName = row.username;\n      const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: bb\n      } = await this.$http.post(\"/api/user/deleteUser\", {\n        id: row.id\n      });\n      this.$message.success(bb);\n      this.getList();\n    },\n    //取消\n    reset() {\n      this.queryForm.userType = null, this.getList();\n    }\n  }\n};","map":{"version":3,"names":["data","tableData","name","date","number","price","acquirer","methods","getList","types","queryForm","userType","aa","$http","post","list","console","log","deleteUser","row","userName","username","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","$refs","multipleTable","clearSelection","$message","info","bb","id","success","reset"],"sources":["src/components/pages/acquisition/SoldList.vue"],"sourcesContent":["<template>\n    <div>\n      <h3 style=\"margin-top: 0\">售出列表</h3>\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>农产品收购</el-breadcrumb-item>\n        <el-breadcrumb-item>售出列表</el-breadcrumb-item>\n      </el-breadcrumb>\n      <el-card>\n   \n  \n        <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n          <el-table-column label=\"ID\" prop=\"id\" />\n          <el-table-column label=\"农产品名称\" prop=\"name\" />  \n          <el-table-column label=\"售出时间\" prop=\"date\" />\n          <el-table-column label=\"售出数量\" prop=\"number\" />\n          <el-table-column label=\"售出单价(元/斤)\" prop=\"price\" />\n          <el-table-column label=\"收购商\" prop=\"acquirer\" />\n\n          <el-table-column label=\"操作\">\n            <template slot-scope=\"scope\">\n              <!-- 咨询 -->\n              <el-button\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                size=\"mini\"\n                @click=\"Delete(scope.row)\"\n              >删除</el-button>\n         \n            </template>\n          </el-table-column>\n        </el-table>\n        <div>\n          <el-pagination></el-pagination>\n        </div>\n      </el-card>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        tableData: [\n          {\n            name: \"小麦\",\n            date: \"2024-4-15\",\n            number: \"300\",\n            price: \"1.4\",\n            acquirer: \"收购小麦\",\n          },\n          {\n            name: \"大豆\",\n            date: \"2024-4-15\",\n            number: \"300\",\n            price: \"1.4\",\n            acquirer: \"收购大豆\",\n          },\n        ],\n      };\n    },\n \n    methods: {\n    //搜索获取列表信息\n    async getList() {   \n      let types = []; \n      if (this.queryForm.userType === null) {\n        types = []; \n      } else {\n        types = [this.queryForm.userType]\n      }\n      const { data: aa } = await this.$http.post(\"/api/user/getAllUserByType\", {list: types});\n      console.log(aa)\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteUser(row) {\n      console.log(row)\n      const userName = row.username;\n      const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: bb } = await this.$http.post(\"/api/user/deleteUser\", { id: row.id });\n      this.$message.success(bb);\n      this.getList();\n    },\n    //取消\n    reset() {\n      this.queryForm.userType = null,\n      this.getList();\n    }\n  }\n  };\n  </script>\n  \n  <style lang=\"less\" scoped>\n  .el-breadcrumb {\n    margin-bottom: 15px;\n    font-size: 17px;\n  }\n  </style>\n  \n"],"mappings":"AAwCA;EACAA,KAAA;IACA;MACAC,SAAA,GACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAJ,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EAEAC,OAAA;IACA;IACA,MAAAC,QAAA;MACA,IAAAC,KAAA;MACA,SAAAC,SAAA,CAAAC,QAAA;QACAF,KAAA;MACA;QACAA,KAAA,SAAAC,SAAA,CAAAC,QAAA;MACA;MACA;QAAAX,IAAA,EAAAY;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAC,IAAA,EAAAN;MAAA;MACAO,OAAA,CAAAC,GAAA,CAAAL,EAAA;MACA,KAAAX,SAAA,GAAAW,EAAA,CAAAZ,IAAA;IACA;IACA;IACA,MAAAkB,WAAAC,GAAA;MACAH,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA,MAAAC,QAAA,GAAAD,GAAA,CAAAE,QAAA;MACA,MAAAC,aAAA,cAAAC,QAAA,gBAAAH,QAAA;QACAI,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA;MACA,IAAAN,aAAA;QACA,KAAAO,KAAA,CAAAC,aAAA,CAAAC,cAAA;QACA,YAAAC,QAAA,CAAAC,IAAA;MACA;MACA;QAAAjC,IAAA,EAAAkC;MAAA,eAAArB,KAAA,CAAAC,IAAA;QAAAqB,EAAA,EAAAhB,GAAA,CAAAgB;MAAA;MACA,KAAAH,QAAA,CAAAI,OAAA,CAAAF,EAAA;MACA,KAAA1B,OAAA;IACA;IACA;IACA6B,MAAA;MACA,KAAA3B,SAAA,CAAAC,QAAA,SACA,KAAAH,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}