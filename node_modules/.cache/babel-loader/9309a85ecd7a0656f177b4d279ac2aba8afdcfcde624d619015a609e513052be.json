{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogVisible: false,\n      publishForm: {\n        id: \"\",\n        productName: \"\",\n        rentSaleType: \"\",\n        productStatus: \"\",\n        productType: \"\",\n        price: \"\",\n        quantity: \"\",\n        sellerUserId: \"\",\n        startTime: \"\",\n        endTime: \"\"\n      }\n    };\n  },\n  methods: {\n    gotoPublish() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      this.publishForm.publisherId = userObj.id;\n      this.dialogVisible = true;\n    },\n    //搜索获取列表信息\n    async getList() {\n      // let user = window.sessionStorage.getItem('user');\n      // let userObj = JSON.parse(user);\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/product/getAllSaleProduct\");\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteProduct(row) {\n      console.log(row);\n      const id = row.id;\n      const confirmResult = await this.$confirm('是否确认删除序号为\"' + id + '\"的商品?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: bb\n      } = await this.$http.post(\"/api/product/deleteSaleProduct\", {\n        id: row.id\n      }); //改deleteSaleProduct，现在的接口是所有商品的列表删除接口，现在需要供应商订单删除接口\n      this.$message.success(bb);\n      this.getList();\n    },\n    async submitForm() {\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/argiNews/publishNews\", this.publishForm);\n      // status ==0 表示成功，成功后要关闭弹窗，并且清空弹窗中的内容，刷新列表\n      if (aa.status === 0) {\n        this.publishForm.publisherId = \"\";\n        this.publishForm.title = \"\";\n        this.publishForm.keywords = \"\";\n        this.publishForm.source = \"\";\n        this.publishForm.content = \"\";\n        this.dialogVisible = false;\n        this.$message.success(\"发布成功\");\n        this.getList();\n      } else {\n        this.$message.success(\"发布失败\" + aa.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["created","getList","data","tableData","dialogVisible","publishForm","id","productName","rentSaleType","productStatus","productType","price","quantity","sellerUserId","startTime","endTime","methods","gotoPublish","user","window","sessionStorage","getItem","userObj","JSON","parse","publisherId","aa","$http","post","console","log","deleteProduct","row","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","$refs","multipleTable","clearSelection","$message","info","bb","success","submitForm","status","title","keywords","source","content","message"],"sources":["src/components/pages2/ListProduct.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 style=\"margin-top: 0\">上架商品</h3>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>上架商品</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"25\">\n\n        <el-col :span=\"5\">\n          <el-button type=\"primary\" @click=\"gotoPublish()\">上架商品信息</el-button>\n        </el-col>\n\n      </el-row>\n\n      <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n        <el-table-column label=\"id\" prop=\"id\" />\n        <el-table-column label=\"商品名称\" prop=\"productName\" />\n        <el-table-column label=\"租售类型\" prop=\"rentSaleType\" v-if=\"false\" />\n        <el-table-column label=\"状态\" prop=\"productStatus\" v-if=\"false\" />\n        <el-table-column label=\"商品类型\" prop=\"productType\" v-if=\"false\" />\n        <el-table-column label=\"价格\" prop=\"price\" />\n        <el-table-column label=\"库存数量\" prop=\"quantity\" />\n        <el-table-column label=\"卖家ID\" prop=\"sellerUserId\" v-if=\"false\" />\n        <el-table-column label=\"开始售卖时间\" prop=\"startTime\" />\n        <el-table-column label=\"结束售卖时间\" prop=\"endTime\" />\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <!-- 修改 -->\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row)\">修改</el-button>\n            <!-- 删除 -->\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteProduct(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 对话框 -->\n      <el-dialog title=\"上架商品信息\" :visible.sync=\"dialogVisible\" width=\"50%\" @close=\"dialogVisible = false\">\n        <el-form :model=\"publishForm\" ref=\"registerForm\" label-width=\"120px\">\n          <el-form-item label=\"id\" v-show=\"false\">\n            <el-input placeholder=\"id\" v-model=\"publishForm.id\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品名称\">\n            <el-input placeholder=\"请输入商品名称\" v-model=\"publishForm.productName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"租售类型\" v-show=\"false\">\n            <el-input placeholder=\"请输入租售类型\" v-model=\"publishForm.rentSaleType\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"状态\" v-show=\"false\">\n            <el-input placeholder=\"状态\" v-model=\"publishForm.productStatus\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品类型\" v-show=\"false\">\n            <el-input placeholder=\"商品类型\" v-model=\"publishForm.productType\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品价格\">\n            <el-input placeholder=\"请输入商品价格\" v-model=\"publishForm.price\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"上架数量\">\n            <el-input placeholder=\"请输入上架数量\" v-model=\"publishForm.quantity\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"卖家ID\" v-show=\"false\">\n            <el-input placeholder=\"卖家ID\" v-model=\"publishForm.sellerUserId\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"开始售卖时间\">\n            <el-input placeholder=\"开始售卖时间\" v-model=\"publishForm.startTime\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"结束售卖时间\">\n            <el-input placeholder=\"结束售卖时间\" v-model=\"publishForm.endTime\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm()\">上架</el-button>\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-dialog>\n      <div>\n        <el-pagination></el-pagination>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogVisible: false,\n      publishForm: {\n        id: \"\",\n        productName: \"\",\n        rentSaleType: \"\",\n        productStatus: \"\",\n        productType: \"\",\n        price: \"\",\n        quantity: \"\",\n        sellerUserId: \"\",\n        startTime: \"\",\n        endTime: \"\",\n      },\n    };\n  },\n  methods: {\n    gotoPublish() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      this.publishForm.publisherId = userObj.id;\n      this.dialogVisible = true;\n    },\n    //搜索获取列表信息\n    async getList() {\n      // let user = window.sessionStorage.getItem('user');\n      // let userObj = JSON.parse(user);\n      const { data: aa } = await this.$http.post(\"/api/product/getAllSaleProduct\");\n      console.log(aa)\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteProduct(row) {\n      console.log(row)\n      const id = row.id;\n      const confirmResult = await this.$confirm('是否确认删除序号为\"' + id + '\"的商品?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: bb } = await this.$http.post(\"/api/product/deleteSaleProduct\", { id: row.id });  //改deleteSaleProduct，现在的接口是所有商品的列表删除接口，现在需要供应商订单删除接口\n      this.$message.success(bb);\n      this.getList();\n    },\n\n    async submitForm() {\n      const { data: aa } = await this.$http.post(\"/api/argiNews/publishNews\", this.publishForm);\n      // status ==0 表示成功，成功后要关闭弹窗，并且清空弹窗中的内容，刷新列表\n      if (aa.status === 0) {\n        this.publishForm.publisherId = \"\";\n        this.publishForm.title = \"\";\n        this.publishForm.keywords = \"\";\n        this.publishForm.source = \"\";\n        this.publishForm.content = \"\";\n        this.dialogVisible = false;\n        this.$message.success(\"发布成功\");\n        this.getList();\n      } else {\n        this.$message.success(\"发布失败\" + aa.message);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-breadcrumb {\n  margin-bottom: 15px;\n  font-size: 17px;\n}\n</style>"],"mappings":"AAoFA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,WAAA;QACAC,EAAA;QACAC,WAAA;QACAC,YAAA;QACAC,aAAA;QACAC,WAAA;QACAC,KAAA;QACAC,QAAA;QACAC,YAAA;QACAC,SAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,IAAAC,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;MACA,KAAAb,WAAA,CAAAoB,WAAA,GAAAH,OAAA,CAAAhB,EAAA;MACA,KAAAF,aAAA;IACA;IACA;IACA,MAAAH,QAAA;MACA;MACA;MACA;QAAAC,IAAA,EAAAwB;MAAA,eAAAC,KAAA,CAAAC,IAAA;MACAC,OAAA,CAAAC,GAAA,CAAAJ,EAAA;MACA,KAAAvB,SAAA,GAAAuB,EAAA,CAAAxB,IAAA;IACA;IACA;IACA,MAAA6B,cAAAC,GAAA;MACAH,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA,MAAA1B,EAAA,GAAA0B,GAAA,CAAA1B,EAAA;MACA,MAAA2B,aAAA,cAAAC,QAAA,gBAAA5B,EAAA;QACA6B,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA;MACA,IAAAN,aAAA;QACA,KAAAO,KAAA,CAAAC,aAAA,CAAAC,cAAA;QACA,YAAAC,QAAA,CAAAC,IAAA;MACA;MACA;QAAA1C,IAAA,EAAA2C;MAAA,eAAAlB,KAAA,CAAAC,IAAA;QAAAtB,EAAA,EAAA0B,GAAA,CAAA1B;MAAA;MACA,KAAAqC,QAAA,CAAAG,OAAA,CAAAD,EAAA;MACA,KAAA5C,OAAA;IACA;IAEA,MAAA8C,WAAA;MACA;QAAA7C,IAAA,EAAAwB;MAAA,eAAAC,KAAA,CAAAC,IAAA,mCAAAvB,WAAA;MACA;MACA,IAAAqB,EAAA,CAAAsB,MAAA;QACA,KAAA3C,WAAA,CAAAoB,WAAA;QACA,KAAApB,WAAA,CAAA4C,KAAA;QACA,KAAA5C,WAAA,CAAA6C,QAAA;QACA,KAAA7C,WAAA,CAAA8C,MAAA;QACA,KAAA9C,WAAA,CAAA+C,OAAA;QACA,KAAAhD,aAAA;QACA,KAAAuC,QAAA,CAAAG,OAAA;QACA,KAAA7C,OAAA;MACA;QACA,KAAA0C,QAAA,CAAAG,OAAA,UAAApB,EAAA,CAAA2B,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}