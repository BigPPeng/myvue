{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      queryForm: {\n        id: \"\",\n        productName: \"\"\n      }\n    };\n  },\n  methods: {\n    async addOrder(row) {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      this.queryForm.id = userObj.id;\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/product/buyProduct\", {\n        userId: userObj.id,\n        productId: row.id,\n        productCount: 1\n      });\n      if (aa.status === 0) {\n        this.$message.success(\"下单完成，请跳转订单\");\n      } else {\n        this.$message.success(\"下单失败\");\n      }\n    },\n    async getListByName() {\n      if (this.queryForm.productName === \"\") {\n        this.getList();\n        return;\n      }\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      this.queryForm.id = userObj.id;\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/consultation/getConsultationByResponderName\", this.queryForm);\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    //搜索获取列表信息\n    async getList() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/product/getAllSaleProduct\", {\n        id: userObj.id\n      });\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteOrder(row) {\n      console.log(row);\n      const id = row.id;\n      const confirmResult = await this.$confirm('是否确认删除序号为\"' + id + '\"的订单?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: bb\n      } = await this.$http.post(\"/api/product/deleteSaleProduct\", {\n        id: row.id\n      }); //改deleteSaleProduct，现在的接口是所有商品的列表删除接口，现在需要供应商订单删除接口\n      this.$message.success(bb);\n      this.getList();\n    },\n    //取消\n    reset() {\n      this.queryForm.userType = null, this.getList();\n    }\n  }\n};","map":{"version":3,"names":["created","getList","data","tableData","queryForm","id","productName","methods","addOrder","row","user","window","sessionStorage","getItem","userObj","JSON","parse","aa","$http","post","userId","productId","productCount","status","$message","success","getListByName","console","log","deleteOrder","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","$refs","multipleTable","clearSelection","info","bb","reset","userType"],"sources":["src/components/pages/shopping/ProductNews.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 style=\"margin-top: 0\">商品信息</h3>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品采购</el-breadcrumb-item>\n      <el-breadcrumb-item>商品信息</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"25\">\n        <el-form ref=\"queryForm\" label-width=\"80px\" :inline=\"true\">\n          <el-form-item label=\"商品名称\" prop=\"productName\">\n            <el-input v-model=\"queryForm.productName\"></el-input>\n          </el-form-item>\n\n          <!-- 搜索框 -->\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"getListByName()\">搜索</el-button>\n          </el-form-item>\n        </el-form>\n      </el-row>\n\n      <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n        <el-table-column label=\"id\" prop=\"id\" />  \n        <el-table-column label=\"商品名称\" prop=\"productName\" />\n        <el-table-column label=\"租售类型\" prop=\"rentSaleType\" v-if=\"false\"/>\n        <el-table-column label=\"状态\" prop=\"productStatus\" />\n        <el-table-column label=\"商品类型\" prop=\"productType\" v-if=\"false\"/>\n        <el-table-column label=\"价格\" prop=\"price\" />\n        <el-table-column label=\"库存数量\" prop=\"quantity\" />\n        <el-table-column label=\"卖家ID\" prop=\"sellerUserId\" v-if=\"false\"/>\n        <el-table-column label=\"开始售卖时间\" prop=\"startTime\" />\n        <el-table-column label=\"结束售卖时间\" prop=\"endTime\" />\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <!-- 修改 -->\n            <el-button type=\"primary\" icon=\"el-icon-shopping-cart-2\" size=\"mini\" @click=\"addOrder(scope.row)\">下单</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    \n      <div>\n        <el-pagination></el-pagination>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      queryForm: {\n        id:\"\",\n        productName:\"\"\n      }\n    };\n  },\n\n  methods: {\n\n    async addOrder(row) {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      this.queryForm.id = userObj.id;\n      const { data: aa } = await this.$http.post(\"/api/product/buyProduct\",{userId:userObj.id, productId:row.id, productCount:1});\n      if(aa.status === 0) {\n        this.$message.success(\"下单完成，请跳转订单\");\n      } else {\n        this.$message.success(\"下单失败\");\n      }\n    },\n\n    async getListByName() {\n      if (this.queryForm.productName === \"\") {\n          this.getList();\n          return;\n      }\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      this.queryForm.id = userObj.id;\n      const { data: aa } = await this.$http.post(\"/api/consultation/getConsultationByResponderName\", this.queryForm);\n      console.log(aa)\n      this.tableData = aa.data;\n    },\n    //搜索获取列表信息\n    async getList() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      const { data: aa } = await this.$http.post(\"/api/product/getAllSaleProduct\", {id:userObj.id});\n      console.log(aa)\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteOrder(row) {\n      console.log(row)\n      const id = row.id;\n      const confirmResult = await this.$confirm('是否确认删除序号为\"' + id + '\"的订单?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: bb } = await this.$http.post(\"/api/product/deleteSaleProduct\", { id: row.id });  //改deleteSaleProduct，现在的接口是所有商品的列表删除接口，现在需要供应商订单删除接口\n      this.$message.success(bb);\n      this.getList();\n    },\n    //取消\n    reset() {\n      this.queryForm.userType = null,\n      this.getList();\n    },\n  }\n\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-breadcrumb {\n  margin-bottom: 15px;\n  font-size: 17px;\n}\n</style>\n"],"mappings":"AAiDA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;QACAC,EAAA;QACAC,WAAA;MACA;IACA;EACA;EAEAC,OAAA;IAEA,MAAAC,SAAAC,GAAA;MACA,IAAAC,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;MACA,KAAAN,SAAA,CAAAC,EAAA,GAAAS,OAAA,CAAAT,EAAA;MACA;QAAAH,IAAA,EAAAe;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAC,MAAA,EAAAN,OAAA,CAAAT,EAAA;QAAAgB,SAAA,EAAAZ,GAAA,CAAAJ,EAAA;QAAAiB,YAAA;MAAA;MACA,IAAAL,EAAA,CAAAM,MAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;MACA;QACA,KAAAD,QAAA,CAAAC,OAAA;MACA;IACA;IAEA,MAAAC,cAAA;MACA,SAAAtB,SAAA,CAAAE,WAAA;QACA,KAAAL,OAAA;QACA;MACA;MACA,IAAAS,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;MACA,KAAAN,SAAA,CAAAC,EAAA,GAAAS,OAAA,CAAAT,EAAA;MACA;QAAAH,IAAA,EAAAe;MAAA,eAAAC,KAAA,CAAAC,IAAA,0DAAAf,SAAA;MACAuB,OAAA,CAAAC,GAAA,CAAAX,EAAA;MACA,KAAAd,SAAA,GAAAc,EAAA,CAAAf,IAAA;IACA;IACA;IACA,MAAAD,QAAA;MACA,IAAAS,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;MACA;QAAAR,IAAA,EAAAe;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAd,EAAA,EAAAS,OAAA,CAAAT;MAAA;MACAsB,OAAA,CAAAC,GAAA,CAAAX,EAAA;MACA,KAAAd,SAAA,GAAAc,EAAA,CAAAf,IAAA;IACA;IACA;IACA,MAAA2B,YAAApB,GAAA;MACAkB,OAAA,CAAAC,GAAA,CAAAnB,GAAA;MACA,MAAAJ,EAAA,GAAAI,GAAA,CAAAJ,EAAA;MACA,MAAAyB,aAAA,cAAAC,QAAA,gBAAA1B,EAAA;QACA2B,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA;MACA,IAAAN,aAAA;QACA,KAAAO,KAAA,CAAAC,aAAA,CAAAC,cAAA;QACA,YAAAf,QAAA,CAAAgB,IAAA;MACA;MACA;QAAAtC,IAAA,EAAAuC;MAAA,eAAAvB,KAAA,CAAAC,IAAA;QAAAd,EAAA,EAAAI,GAAA,CAAAJ;MAAA;MACA,KAAAmB,QAAA,CAAAC,OAAA,CAAAgB,EAAA;MACA,KAAAxC,OAAA;IACA;IACA;IACAyC,MAAA;MACA,KAAAtC,SAAA,CAAAuC,QAAA,SACA,KAAA1C,OAAA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}