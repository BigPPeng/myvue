{"ast":null,"code":"export default {\n  data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n        role: '',\n        phone: '',\n        address: ''\n      },\n      errorMessage: ''\n    };\n  },\n  computed: {\n    isFormValid() {\n      return this.form.username && this.form.password && this.form.role && this.form.phone && this.form.address;\n    }\n  },\n  methods: {\n    handleSubmit() {\n      // 这里应该发送请求到服务器注册新用户  \n      // 假设请求成功，则清空表单并显示成功信息  \n      // 假设请求失败，则设置errorMessage  \n\n      // 模拟服务器响应  \n      if (this.isFormValid) {\n        // 清除错误信息  \n        this.errorMessage = '';\n        // 模拟发送请求到服务器（实际开发中替换为真实请求）  \n        console.log('注册信息:', this.form);\n        // 重置表单  \n        this.resetForm();\n        // 显示成功信息（这里只是控制台输出）  \n        console.log('注册成功！');\n      } else {\n        this.errorMessage = '请填写所有必填项！';\n      }\n    },\n    resetForm() {\n      this.form = {\n        username: '',\n        password: '',\n        role: '',\n        phone: '',\n        address: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","form","username","password","role","phone","address","errorMessage","computed","isFormValid","methods","handleSubmit","console","log","resetForm"],"sources":["src/components/common/RegisterView.vue"],"sourcesContent":["<template>  \n  <div class=\"register-container\">  \n    <h2>注册页面</h2>  \n    <form @submit.prevent=\"handleSubmit\">  \n      <div class=\"form-group\">  \n        <label for=\"username\">用户名:</label>  \n        <input type=\"text\" id=\"username\" v-model=\"form.username\" required>  \n      </div>  \n      <div class=\"form-group\">  \n        <label for=\"password\">密码:</label>  \n        <input type=\"password\" id=\"password\" v-model=\"form.password\" required>  \n      </div>  \n      <div class=\"form-group\">  \n        <label for=\"role\">身份选择:</label>  \n        <select v-model=\"form.role\" required>  \n          <option value=\"\">请选择</option>  \n          <option value=\"farmer\">农户</option>  \n          <option value=\"supplier\">供货商</option>  \n          <option value=\"buyer\">收购商</option>  \n        </select>  \n      </div>  \n      <div class=\"form-group\">  \n        <label for=\"phone\">手机号码:</label>  \n        <input type=\"tel\" id=\"phone\" v-model=\"form.phone\" required>  \n      </div>  \n      <div class=\"form-group\">  \n        <label for=\"address\">选择家庭住址:</label>  \n        <textarea id=\"address\" v-model=\"form.address\" rows=\"4\"></textarea>  \n      </div>  \n      <div class=\"form-group\">  \n        <button type=\"submit\" :disabled=\"!isFormValid\">注册</button>  \n      </div>  \n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>  \n    </form>  \n  </div>  \n</template>  \n  \n<script>  \nexport default {  \n  data() {  \n    return {  \n      form: {  \n        username: '',  \n        password: '',  \n        role: '',  \n        phone: '',  \n        address: '',  \n      },  \n      errorMessage: '',  \n    };  \n  },  \n  computed: {  \n    isFormValid() {  \n      return this.form.username && this.form.password && this.form.role && this.form.phone && this.form.address;  \n    },  \n  },  \n  methods: {  \n    handleSubmit() {  \n      // 这里应该发送请求到服务器注册新用户  \n      // 假设请求成功，则清空表单并显示成功信息  \n      // 假设请求失败，则设置errorMessage  \n  \n      // 模拟服务器响应  \n      if (this.isFormValid) {  \n        // 清除错误信息  \n        this.errorMessage = '';  \n        // 模拟发送请求到服务器（实际开发中替换为真实请求）  \n        console.log('注册信息:', this.form);  \n        // 重置表单  \n        this.resetForm();  \n        // 显示成功信息（这里只是控制台输出）  \n        console.log('注册成功！');  \n      } else {  \n        this.errorMessage = '请填写所有必填项！';  \n      }  \n    },  \n    resetForm() {  \n      this.form = {  \n        username: '',  \n        password: '',  \n        role: '',  \n        phone: '',  \n        address: '',  \n      };  \n    },  \n  },  \n};  \n</script>  \n  \n<style scoped>  \n.register-container {  \n  /* 你的样式代码 */  \n}  \n  \n.form-group {  \n  margin-bottom: 20px;  \n}  \n  \n.error {  \n  color: red;  \n  font-size: 12px;  \n}  \n</style>"],"mappings":"AAsCA;EACAA,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,YAAAR,IAAA,CAAAC,QAAA,SAAAD,IAAA,CAAAE,QAAA,SAAAF,IAAA,CAAAG,IAAA,SAAAH,IAAA,CAAAI,KAAA,SAAAJ,IAAA,CAAAK,OAAA;IACA;EACA;EACAI,OAAA;IACAC,aAAA;MACA;MACA;MACA;;MAEA;MACA,SAAAF,WAAA;QACA;QACA,KAAAF,YAAA;QACA;QACAK,OAAA,CAAAC,GAAA,eAAAZ,IAAA;QACA;QACA,KAAAa,SAAA;QACA;QACAF,OAAA,CAAAC,GAAA;MACA;QACA,KAAAN,YAAA;MACA;IACA;IACAO,UAAA;MACA,KAAAb,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}