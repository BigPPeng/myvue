{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      //发布的表单\n      dialogVisible: false,\n      publishForm: {\n        publisherId: \"\",\n        title: \"\",\n        keywords: \"\",\n        source: \"\",\n        content: \"\"\n      }\n    };\n  },\n  methods: {\n    async getList() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/argiNews/getNewsByPublisherId\", {\n        id: userObj.id\n      });\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //删除\n    async delete(row) {\n      console.log(row);\n      const userName = row.username;\n      const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: bb\n      } = await this.$http.post(\"/api/user/delNews\", {\n        id: row.id\n      });\n      this.$message.success(bb);\n      this.getList();\n    },\n    //取消\n    reset() {\n      this.queryForm.userType = null, this.getList();\n    }\n  }\n};","map":{"version":3,"names":["created","getList","data","tableData","dialogVisible","publishForm","publisherId","title","keywords","source","content","methods","user","window","sessionStorage","getItem","userObj","JSON","parse","aa","$http","post","id","console","log","submitForm","formName","$refs","validate","valid","alert","delete","row","userName","username","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","multipleTable","clearSelection","$message","info","bb","success","reset","queryForm","userType"],"sources":["src/components/pages1/NewsView.vue"],"sourcesContent":["<template>\n    <div>\n      <h3 style=\"margin-top: 0\">发布资讯信息</h3>\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>发布资讯信息</el-breadcrumb-item>\n      </el-breadcrumb>\n      <el-card>\n        <el-row :gutter=\"25\">\n  \n      <el-col :span=\"5\">\n        <el-button type=\"primary\" @click=\"dialogVisible = true\"\n            >发布资讯信息</el-button>\n      </el-col>\n    \n    </el-row>\n  \n        <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n          <el-table-column label=\"id\" prop=\"id\" />\n          <el-table-column label=\"标题\" prop=\"title\" />\n          <el-table-column label=\"发布时间\" prop=\"publishTime\" />\n          <el-table-column label=\"关键字\" prop=\"publishKeywords\" v-if=\"false\"/>\n          <el-table-column label=\"发布者\" prop=\"publisher\" v-if=\"false\" />\n          <el-table-column label=\"发布者ID\" prop=\"publisherId\" v-if=\"false\" />  \n          <el-table-column label=\"来源\" prop=\"source\" />\n          <el-table-column label=\"内容\" prop=\"content\" />\n          <el-table-column label=\"操作\">\n            <template slot-scope=\"scope\">\n              <!-- 修改 -->\n              <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row)\">修改</el-button>\n              <!-- 删除 -->\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"delete(scope.row)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n         <!-- 对话框 -->\n      <el-dialog\n        title=\"发布资讯信息\"\n        :visible.sync=\"dialogVisible\"\n        width=\"50%\"\n        @close=\"dialogVisible = false\"\n      >\n        <el-form :model=\"publishForm\" ref=\"registerForm\" label-width=\"120px\">\n          <el-form-item label=\"id\">\n            <el-input placeholder=\"id\" v-model=\"publishForm.publisherId\" v-show=\"false\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"标题\">\n            <el-input placeholder=\"请输入标题\" v-model=\"publishForm.title\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"关键字\">\n            <el-input placeholder=\"请输入关键字\" v-model=\"publishForm.keywords\" ></el-input>\n          </el-form-item>\n          <el-form-item label=\"来源\">\n            <el-input placeholder=\"请输入来源\" v-model=\"publishForm.source\" ></el-input>\n          </el-form-item>\n          <el-form-item label=\"内容\">\n            <el-input\n              type=\"textarea\"\n              :rows=\"2\"\n              placeholder=\"请输入内容\"\n              v-model=\"publishForm.content\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm('registerForm')\"\n              >发布</el-button\n            >\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-dialog>\n        <div>\n          <el-pagination></el-pagination>\n        </div>\n      </el-card>\n  \n    </div>\n  </template>\n  \n  <script>\n  export default {\n    created() {\n    this.getList();\n  },\n    data() {\n      return {\n        tableData: [],\n        //发布的表单\n      dialogVisible: false,\n      publishForm: {\n        publisherId: \"\",\n        title: \"\",\n        keywords: \"\", \n        source: \"\",\n        content: \"\",\n      },\n      };\n    },\n    methods: {\n      async getList() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      const { data: aa } = await this.$http.post(\"/api/argiNews/getNewsByPublisherId\", {id:userObj.id});\n      console.log(aa)\n      this.tableData = aa.data;\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n     //删除\n     async delete(row) {\n      console.log(row)\n      const userName = row.username;\n      const confirmResult = await this.$confirm('是否确认删除名称为\"' + userName + '\"的用户?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: bb } = await this.$http.post(\"/api/user/delNews\", { id: row.id });\n      this.$message.success(bb);\n      this.getList();\n    },\n    //取消\n    reset() {\n      this.queryForm.userType = null,\n      this.getList();\n    }\n  },\n  };\n  </script>\n  \n  <style lang=\"less\" scoped>\n  .el-breadcrumb {\n    margin-bottom: 15px;\n    font-size: 17px;\n  }\n  </style>"],"mappings":"AAgFA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;MACA;MACAC,aAAA;MACAC,WAAA;QACAC,WAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAV,QAAA;MACA,IAAAW,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;MACA;QAAAV,IAAA,EAAAiB;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAC,EAAA,EAAAN,OAAA,CAAAM;MAAA;MACAC,OAAA,CAAAC,GAAA,CAAAL,EAAA;MACA,KAAAhB,SAAA,GAAAgB,EAAA,CAAAjB,IAAA;IACA;IACAuB,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAP,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACA;IACA,MAAAO,OAAAC,GAAA;MACAT,OAAA,CAAAC,GAAA,CAAAQ,GAAA;MACA,MAAAC,QAAA,GAAAD,GAAA,CAAAE,QAAA;MACA,MAAAC,aAAA,cAAAC,QAAA,gBAAAH,QAAA;QACAI,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA;MACA,IAAAN,aAAA;QACA,KAAAR,KAAA,CAAAe,aAAA,CAAAC,cAAA;QACA,YAAAC,QAAA,CAAAC,IAAA;MACA;MACA;QAAA3C,IAAA,EAAA4C;MAAA,eAAA1B,KAAA,CAAAC,IAAA;QAAAC,EAAA,EAAAU,GAAA,CAAAV;MAAA;MACA,KAAAsB,QAAA,CAAAG,OAAA,CAAAD,EAAA;MACA,KAAA7C,OAAA;IACA;IACA;IACA+C,MAAA;MACA,KAAAC,SAAA,CAAAC,QAAA,SACA,KAAAjD,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}