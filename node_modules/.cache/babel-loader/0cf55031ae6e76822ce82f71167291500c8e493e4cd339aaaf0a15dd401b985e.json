{"ast":null,"code":"export default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogVisible: false,\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        identity: \"\",\n        // 初始值可以是'farmer'、'supplier'或'buyer'中的任何一个，或者为空字符串\n        phone: \"\",\n        address: \"\"\n      }\n    };\n  },\n  methods: {\n    //搜索获取列表信息\n    async getList() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      const {\n        data: aa\n      } = await this.$http.post(\"/api/product/getAllSaleProduct\", {\n        id: userObj.id\n      });\n      console.log(aa);\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteProduct(row) {\n      console.log(row);\n      const id = row.id;\n      const confirmResult = await this.$confirm('是否确认删除序号为\"' + id + '\"的商品?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: bb\n      } = await this.$http.post(\"/api/product/deleteSaleProduct\", {\n        id: row.id\n      }); //改deleteSaleProduct，现在的接口是所有商品的列表删除接口，现在需要供应商订单删除接口\n      this.$message.success(bb);\n      this.getList();\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["created","getList","data","tableData","dialogVisible","registerForm","username","password","identity","phone","address","methods","user","window","sessionStorage","getItem","userObj","JSON","parse","aa","$http","post","id","console","log","deleteProduct","row","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","$refs","multipleTable","clearSelection","$message","info","bb","success","submitForm","formName","validate","valid","alert"],"sources":["src/components/pages2/ListProduct.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 style=\"margin-top: 0\">上架商品</h3>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>上架商品</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"25\">\n\n        <el-col :span=\"5\">\n          <el-button type=\"primary\" @click=\"dialogVisible = true\">上架商品信息</el-button>\n        </el-col>\n\n      </el-row>\n\n      <el-table :data=\"tableData\" border style=\"width: 100%\" typle=\"margin-top: 90px;\">\n        <el-table-column label=\"id\" prop=\"id\" />\n        <el-table-column label=\"商品名称\" prop=\"productName\" />\n        <el-table-column label=\"租售类型\" prop=\"rentSaleType\" v-if=\"false\" />\n        <el-table-column label=\"状态\" prop=\"productStatus\"  v-if=\"false\" />\n        <el-table-column label=\"商品类型\" prop=\"productType\" v-if=\"false\" />\n        <el-table-column label=\"价格\" prop=\"price\" />\n        <el-table-column label=\"库存数量\" prop=\"quantity\" />\n        <el-table-column label=\"卖家ID\" prop=\"sellerUserId\"   v-if=\"false\" />\n        <el-table-column label=\"开始售卖时间\" prop=\"startTime\" />\n        <el-table-column label=\"结束售卖时间\" prop=\"endTime\" />\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <!-- 修改 -->\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row)\">修改</el-button>\n            <!-- 删除 -->\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteProduct(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 对话框 -->\n      <el-dialog title=\"上架商品信息\" :visible.sync=\"dialogVisible\" width=\"50%\" @close=\"dialogVisible = false\">\n        <el-form :model=\"registerForm\" ref=\"registerForm\" label-width=\"120px\">\n          <el-form-item label=\"id\">\n            <el-input placeholder=\"id\" v-model=\"registerForm.id\" v-show=\"false\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品名称\">\n            <el-input placeholder=\"请输入商品名称\" v-model=\"registerForm.productName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"租售类型\">\n            <el-input placeholder=\"请输入租售类型\" v-model=\"registerForm.price\" v-show=\"false\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"状态\">\n            <el-input placeholder=\"状态\" v-model=\"registerForm.quantity\" v-show=\"false\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品类型\">\n            <el-input placeholder=\"商品类型\" v-model=\"registerForm.productName\" v-show=\"false\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"商品价格\">\n            <el-input placeholder=\"请输入商品价格\" v-model=\"registerForm.productName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"上架数量\">\n            <el-input placeholder=\"请输入上架数量\" v-model=\"registerForm.productName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"卖家ID\">\n            <el-input placeholder=\"卖家ID\" v-model=\"registerForm.productName\" v-show=\"false\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"开始售卖时间\">\n            <el-input placeholder=\"开始售卖时间\" v-model=\"registerForm.productName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"结束售卖时间\">\n            <el-input placeholder=\"结束售卖时间\" v-model=\"registerForm.productName\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm('registerForm')\">上架</el-button>\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\n          </el-form-item>\n        </el-form>\n      </el-dialog>\n      <div>\n        <el-pagination></el-pagination>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  created() {\n    this.getList();\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogVisible: false,\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        identity: \"\", // 初始值可以是'farmer'、'supplier'或'buyer'中的任何一个，或者为空字符串\n        phone: \"\",\n        address: \"\",\n      },\n    };\n  },\n  methods: {\n       //搜索获取列表信息\n       async getList() {\n      let user = window.sessionStorage.getItem('user');\n      let userObj = JSON.parse(user);\n      const { data: aa } = await this.$http.post(\"/api/product/getAllSaleProduct\", {id:userObj.id});\n      console.log(aa)\n      this.tableData = aa.data;\n    },\n    //删除\n    async deleteProduct(row) {\n      console.log(row)\n      const id = row.id;\n      const confirmResult = await this.$confirm('是否确认删除序号为\"' + id + '\"的商品?', \"提示\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n      // 成功删除为confirm 取消为 cancel\n      if (confirmResult != 'confirm') {\n        this.$refs.multipleTable.clearSelection();\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: bb } = await this.$http.post(\"/api/product/deleteSaleProduct\", { id: row.id });  //改deleteSaleProduct，现在的接口是所有商品的列表删除接口，现在需要供应商订单删除接口\n      this.$message.success(bb);\n      this.getList();\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert(\"提交成功\"); // 这里应该是一个异步请求来提交表单数据到服务器\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-breadcrumb {\n  margin-bottom: 15px;\n  font-size: 17px;\n}\n</style>"],"mappings":"AAoFA;EACAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,YAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAV,QAAA;MACA,IAAAW,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,IAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA;MACA;QAAAV,IAAA,EAAAiB;MAAA,eAAAC,KAAA,CAAAC,IAAA;QAAAC,EAAA,EAAAN,OAAA,CAAAM;MAAA;MACAC,OAAA,CAAAC,GAAA,CAAAL,EAAA;MACA,KAAAhB,SAAA,GAAAgB,EAAA,CAAAjB,IAAA;IACA;IACA;IACA,MAAAuB,cAAAC,GAAA;MACAH,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA,MAAAJ,EAAA,GAAAI,GAAA,CAAAJ,EAAA;MACA,MAAAK,aAAA,cAAAC,QAAA,gBAAAN,EAAA;QACAO,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA;MACA,IAAAN,aAAA;QACA,KAAAO,KAAA,CAAAC,aAAA,CAAAC,cAAA;QACA,YAAAC,QAAA,CAAAC,IAAA;MACA;MACA;QAAApC,IAAA,EAAAqC;MAAA,eAAAnB,KAAA,CAAAC,IAAA;QAAAC,EAAA,EAAAI,GAAA,CAAAJ;MAAA;MACA,KAAAe,QAAA,CAAAG,OAAA,CAAAD,EAAA;MACA,KAAAtC,OAAA;IACA;IAEAwC,WAAAC,QAAA;MACA,KAAAR,KAAA,CAAAQ,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAtB,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}